import asyncio
from flask import Flask, request
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.webhook.aiohttp_server import SimpleRequestHandler
import os

# üîπ —Ç–æ–∫–µ–Ω
API_TOKEN = os.getenv("BOT_TOKEN")

# üîπ webhook URL ‚Äî —Å—é–¥–∞ Telegram –±—É–¥–µ—Ç —Å–ª–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
WEBHOOK_URL = os.getenv("RENDER_EXTERNAL_URL") + "/webhook"

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
app = Flask(__name__)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! üëã –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render —á–µ—Ä–µ–∑ Webhook.")

@app.route("/webhook", methods=["POST"])
def webhook():
    update = types.Update.model_validate(request.get_json())
    asyncio.run(dp.feed_update(bot, update))
    return "ok", 200


@app.route("/")
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç ‚úÖ"

async def on_startup():
    await bot.set_webhook(WEBHOOK_URL)

if __name__ == "__main__":
    asyncio.run(on_startup())
    app.run(host="0.0.0.0", port=int(os.getenv("PORT", 5000)))

